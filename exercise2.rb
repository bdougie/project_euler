# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# create Fibonacci sequence class
# create method to create the fibonacci sequence up to 4 million.
# create a method to find even values and sum them.

class Fibonacci

	max = 4_000_000_000

	def fibo(num)
		num.times.each_with_object([1,2]) {|num, a| a << a[-2] + a[-1]}
	end
	# need to implment properly
	# while {a[-2] + a[-1] < max} 

	def sum_of_fibo
		a = fibo(num)
		a.each {|x| sum += x if x % 2 == 0 }
	end

end

f = Fibonacci.new
puts f.fibo(30)



